import * as __aws_sdk_middleware_stack from "@aws-sdk/middleware-stack";
import * as __aws_sdk_types from "@aws-sdk/types";
import { LambdaConfiguration, LambdaResolvedConfiguration } from "./LambdaConfiguration";
import { InputTypesUnion } from "./types/InputTypesUnion";
import { OutputTypesUnion } from "./types/OutputTypesUnion";
export declare class LambdaClient implements __aws_sdk_types.AWSClient<InputTypesUnion, OutputTypesUnion, Blob> {
    readonly config: LambdaResolvedConfiguration;
    readonly middlewareStack: __aws_sdk_middleware_stack.MiddlewareStack<InputTypesUnion, OutputTypesUnion, Blob>;
    constructor(configuration: LambdaConfiguration);
    destroy(): void;
    /**
     * This will need to be revised when the command interface lands.
     */
    send<InputType extends InputTypesUnion, OutputType extends OutputTypesUnion>(command: __aws_sdk_types.Command<InputTypesUnion, InputType, OutputTypesUnion, OutputType, LambdaResolvedConfiguration, Blob>): Promise<OutputType>;
    send<InputType extends InputTypesUnion, OutputType extends OutputTypesUnion>(command: __aws_sdk_types.Command<InputTypesUnion, InputType, OutputTypesUnion, OutputType, LambdaResolvedConfiguration, Blob>, cb: (err: any, data?: OutputType) => void): void;
}
